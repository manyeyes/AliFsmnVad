name: Multi-target Build and Pack

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  build_and_pack:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux 构建跨平台目标
          - os: ubuntu-latest
            target_framework: 'netstandard2.0'
            dotnet_version: '6.0.x'
          - os: ubuntu-latest
            target_framework: 'netstandard2.1'
            dotnet_version: '7.0.x'
          - os: ubuntu-latest
            target_framework: 'netcoreapp3.1'
            dotnet_version: '3.1.x'
          - os: ubuntu-latest
            target_framework: 'net6.0'
            dotnet_version: '6.0.x'
          - os: ubuntu-latest
            target_framework: 'net7.0'
            dotnet_version: '7.0.x'
          - os: ubuntu-latest
            target_framework: 'net8.0'
            dotnet_version: '8.0.x'
          - os: ubuntu-latest
            target_framework: 'net9.0'
            dotnet_version: '9.0.x'
            
          # Windows 构建 Windows 特定目标
          - os: windows-latest
            target_framework: 'net8.0-windows10.0.19041.0'
            dotnet_version: '8.0.x'
            
          # macOS 构建 Android 目标（也可用 windows-latest）
          - os: macos-latest
            target_framework: 'net8.0-android'
            dotnet_version: '8.0.x'
            install_workload: true
            
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet_version }}
        
    - name: Install Android workload (if needed)
      if: matrix.install_workload == true
      run: dotnet workload install android
        
    - name: Restore dependencies
      run: dotnet restore AliFsmnVad/AliFsmnVad.csproj -p:TargetFramework=${{ matrix.target_framework }}
      
    - name: Build
      run: dotnet build AliFsmnVad/AliFsmnVad.csproj -c Release --no-restore -p:TargetFramework=${{ matrix.target_framework }}
      
    - name: Pack
      run: |
        mkdir -p nupkg
        dotnet pack AliFsmnVad/AliFsmnVad.csproj -c Release --no-build -o ./nupkg -p:TargetFramework=${{ matrix.target_framework }}
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: nupkg-${{ matrix.target_framework }}
        path: ./nupkg/*.nupkg

  publish_nuget:
    needs: build_and_pack
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./merged-nupkg
        pattern: 'nupkg-*/*'
        merge-multiple: true
        
    - name: Publish to NuGet
      run: |
        dotnet nuget push ./merged-nupkg/*.nupkg \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate
